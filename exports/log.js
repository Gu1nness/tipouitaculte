module.exports = {
  Error : function(cmd, err, msg) {
    if(cmd === "vote") {
      msg.channel.send("Erreur avec la commande `" + cmd + "` : " + err +".")
        .then(newMsg => {
          msg.delete()
          newMsg.delete(10000)
        })
      maxilog.send(TiCu.Date("log") + " : Erreur : (`" + cmd + "`, " + err +")")
    } else {
      msg.reply("erreur avec la commande `" + cmd + "` : " + err +".")
      maxilog.send(TiCu.Date("log") + " : Erreur : (`" + cmd + "`, " + err +")")
    }
  },
  Json : function(type, target) {
    if(type === "err") maxilog.send(TiCu.Date("log") + " : JSON\nErreur JSON (" + target + ")")
    else maxilog.send(TiCu.Date("log") + " : JSON\n" + type + " - " + target)
  },
  Quarantaine : function(type, newMsg, msg) {
    maxilog.send(TiCu.Date("log") + " : Quarantaine - " + type + "\n" + newMsg.url)
    msg.react("üí¨")
  },
  DM : function(embed, msg) {
    maxilog.send(TiCu.Date("log") + " : DM")
    maxilog.send(embed)
    msg.react("üí¨")
  },
  VoteUpdate : function(usr, emoji, msg) {
    const user = tipoui.members.get(usr)
    maxilog.send(TiCu.Date("log") + " : VoteCollections\n" + user.displayName + " a vot√© " + emoji + " sur le vote :\n" + msg.url)
    user.send("Votre vote `" + emoji + "` a bien √©t√© pris en compte.\n" + msg.url)
  },
  VoteCollector : function(msg) {
    maxilog.send(TiCu.Date("log") + " : VoteCollections\nInitialisation du vote pour le message\n" + msg.url)
  },
  VoteDone : function (reason, type, msg, target) {
    if (type === "text") {
      maxilog.send(TiCu.Date("log") + " : VoteDone\nFin du vote pour le message\n" + msg.url)
    } else {
      maxilog.send(
        TiCu.Date("log") + " : VoteDone\nFin du vote (avec le resultat \"" + reason + "\") pour le message\n" + msg.url +
        "\nVote de " + type + " pour " + tipoui.members.get(target).displayName
      )
    }
  },
  ServerPage : function(req) {
    maxilog.send(TiCu.Date("log") + " : Server\nServed Page : " + req.path)
  },
  Commands : {
    Ban : function(target, reason, msg) {
      maxilog.send(TiCu.Date("log") + " : Ban \n" + msg.member.displayName + " a banni " + target.username + " / " + target.id + ".")
      minilog.send(msg.member.displayName + " a banni " + target.username + ".")
      if(reason) {
        maxilog.send("Raison : " + reason)
        minilog.send("Raison : " + reason)
      }
      msg.react("‚úÖ")
    },
    Bienvenue : function(target, msg) {
      maxilog.send(TiCu.Date("log") + " : Bienvenue \n" + msg.member.displayName + " a souhait√© la bienvenue √† " + target.displayName + " / " + target.id + ".")
      minilog.send(msg.member.displayName + " a souhait√© la bienvenue √† " + target.displayName + ".")
      tipoui.channels.get(PUB.tipoui.invite).send("Bienvenue " + target.displayName + " ! <:patatecoeur:585795622846857256>\nTe voici d√©sormais Phosphate d'Alumine. N'h√©site pas √† m'envoyer un message priv√© si tu as des questions sur le serveur ou un message √† transmettre aux Vigiliant¬∑es.\nNous esp√©rons que tu seras √† ton aise et que tout se passera bien.")
    },
    Color : function(action, color, msg) {
      if(action === "switched") {
        if(color === "turquoise") {
          maxilog.send(TiCu.Date("log") + " : Color\n" + msg.member.displayName + " a r√©initialis√© sa couleur.")
          msg.react("‚úÖ")
        } else {
          maxilog.send(TiCu.Date("log") + " : Color\n" + msg.member.displayName + " a adopt√© la couleur " + color + ".")
          msg.react("‚úÖ")
        }
      }
      if(action === "deleted") {
        maxilog.send(TiCu.Date("log") + " : Color\n" + "La couleur " + color + " a √©t√© supprim√©e.")
        msg.react("‚úî")
      }
    },
    Kick : function(target, reason, msg) {
      maxilog.send(TiCu.Date("log") + " : Kick \n" + msg.member.displayName + " a kick√© " + target.username + " / " + target.id + ".")
      minilog.send(msg.member.displayName + " a kick√© " + target.username + ".")
      if(reason) {
        maxilog.send("Raison : " + reason)
        minilog.send("Raison : " + reason)
      }
      msg.react("‚úÖ")
    },
    Purifier : function(target, msg) {
      maxilog.send(TiCu.Date("log") + " : Purifier \n" + msg.member.displayName + " a ajout√© " + target.displayName + " parmi les Pourfendeureuses de Cismecs.")
      minilog.send(msg.member.displayName + " a ajout√© " + target.displayName + " parmi les Pourfendeureuses de Cismecs.")
      msg.react("‚úÖ")
    },
    Quarantaine : function(action, target, reason, msg) {
      if(action) {
        minilog.send(msg.member.displayName + "a mis " + target.displayName + " en quarantaine.")
        maxilog.send(TiCu.Date("log") + " : Quarantaine\n" + msg.member.displayName + " a mis " + target.displayName + " / " + target.id + " en quarantaine.")
        tipoui.channels.get(PUB.tipoui.quarantaineUser).send("<@" + target.id + ">, tu as √©t√© plac√©¬∑e en quarantaine. Tous les messages que tu transmetras dans ce salon seront transmis aux Vigilant¬∑es, comme lorsque tu m'envoie un message priv√©, et je m'occuperais de transmettre leurs r√©ponses.\n‚ö†Quitter le serveur alors que tu es ici te vaudra un ban imm√©diat.‚ö†")
        msg.react("‚úÖ")
      } else {
        minilog.send(msg.member.displayName + "a enlev√© " + target.displayName + " de quarantaine.")
        maxilog.send(TiCu.Date("log") + " : Quarantaine\n" + msg.member.displayName + " a enlev√© " + target.displayName + " / " + target.id + " de quarantaine.")
        msg.react("‚úÖ")
      }
      if(reason) {
        minilog.send("Raison : " + reason)
        maxilog.send("Raison : " + reason)
      }
    },
    Roles : function(target, action, roles, msg) {
      let author = msg.member ? msg.member.displayName : msg.author.username
      let roleNames = ""
      for(i=0;i<roles.length;i++) {
        roleNames += "`" + tipoui.roles.get(roles[i]).name + "` "
      }
      action = (action === "addRoles") ? "ajou√©" : "enlev√©"
      minilog.send(author + " a " + action + " des r√¥les √† " + target.displayName)
      maxilog.send(TiCu.Date("log") + " : Roles\n" + author + " a " + action + " des r√¥les √† " + target.displayName + "\n" + roleNames)
      msg.react("‚úÖ")
    },
    Send : function(cmdMsg, newMsg) {
      let author = cmdMsg.member ? cmdMsg.member.displayName : cmdMsg.author.username
      maxilog.send(TiCu.Date("log") + " : Send \n" + author + " a envoy√© un message vers `" + newMsg.channel.toString() + "`\n" + newMsg.url)
      maxilog.send(newMsg.toString())
      minilog.send(author + " a envoy√© un message vers " + newMsg.channel.toString())
      cmdMsg.react("‚úÖ")
    },
    Vote : {
      Public : function(msg) {
        minilog.send(msg.member.displayName + " a lanc√© un vote public")
        maxilog.send(TiCu.Date("log") + " : Vote\n" + msg.member.displayName + " a lanc√© un vote public :\n" + msg.url)
        maxilog.send(msg.content)
      },
      Anon : function(type, params, newMsg, msg) {
        /* Might receive empty params[2] */
        if(type === "text") {
          minilog.send(msg.member.displayName + " a lanc√© un vote anonyme")
        } else {
          minilog.send(msg.member.displayName + " a lanc√© un vote anonyme pour " + type + " " + TiCu.Mention(params[2]) )
          maxilog.send(TiCu.Date("log") + " : Vote\n" + msg.member.displayName + " a lanc√© un vote anonyme : " + type + TiCu.Mention(params[2]) + "\n" + msg.url)
        }
        maxilog.send(newMsg.content)
        msg.delete()
      }
    }
  },
  ReactionError: function(reaction, usr, type) {
    let errorText;
    if (type === "add") {
      errorText = tipoui.members.get(usr.id).displayName + " tried to trigger a bot reaction by reacting to " + reaction.message.url + " with " + reaction.emoji.name
    } else {
      errorText = tipoui.members.get(usr.id).displayName + " tried to trigger a bot reaction by deleting their reaction " + reaction.emoji.name + " to " + reaction.message.url
    }
    maxilog.send(TiCu.Date("log") + " : ReactionError\nSomething went wrong with authorizations\n" + errorText)
  },
  Reactions: {
    genericReaction: function(reaction, usr, type) {
      if (type === "add") {
        maxilog.send(TiCu.Date("log") + " : ReactionAdd\n" + tipoui.members.get(usr.id).displayName + " a r√©agit √† " + reaction.message.url + " avec " + reaction.emoji.name)
      } else {
        maxilog.send(TiCu.Date("log") + " : ReactionRemove\n" +tipoui.members.get(usr.id).displayName + " a supprim√© sa r√©action " + reaction.emoji.name + " √† " + reaction.message.url)
      }
    },
    Heart: function(reaction, usr, type) {
      if (type === "add") {
        maxilog.send(TiCu.Date("log") + " : ReactionHeartAdd\n" + tipoui.members.get(usr.id).displayName + " a ajout√© un coeur √† " + reaction.message.url)
      } else {
        maxilog.send(TiCu.Date("log") + " : ReactionHeartRemove\n" +tipoui.members.get(usr.id).displayName + " a retir√© un coeur √† " + reaction.message.url)
      }
    }
  },
  Auto: {
    SuchTruc: function(msg) {
      maxilog.send(TiCu.Date("log") + " : SuchTruc\nSuch Log, much info !" + msg.url)
    }
  },
  XP: {
    newEntry: function(entry) {
      maxilog.send(`${TiCu.Date("log")} : newXPMember\n${tipoui.members.get(entry.id).displayName} was added to the XP system`)
    },
    levelChange: function(entry, previousLevel) {
      maxilog.send(`${TiCu.Date("log")} : levelChange\n${tipoui.members.get(entry.id).displayName} changed level from ${previousLevel} to ${entry.level}`)
    },
    error: function(type, target) {
      switch(type) {
        case TiCu.Xp.errorTypes.MULTIPLEUPDATE:
          maxilog.send(`${TiCu.Date("log")} : XP ERROR\nThere was a problem updating the XP for ${tipoui.members.get(target).displayName} : updated multiple entries`)
          break;
        default:
          maxilog.send(`${TiCu.Date("log")} : XP ERROR\nGeneric error, sorry for the lack of information`)
      }
    }
  }
}
